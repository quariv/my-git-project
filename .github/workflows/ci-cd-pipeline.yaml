name: CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:               # enables manual “Run workflow”

# ──────────────────────────────────────────────────────────────────────────────
# BUILD  – GitHub-hosted Ubuntu runner
# ──────────────────────────────────────────────────────────────────────────────
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          cache-from: type=gha
          cache-to:   type=gha,mode=max

# ──────────────────────────────────────────────────────────────────────────────
# DEPLOY  – self-hosted Windows runner (labels must match your runner)
# ──────────────────────────────────────────────────────────────────────────────
  deploy:
    needs: build
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.29.0           # pin kubectl version that matches your cluster

      # ─── Decode kubeconfig secret on Windows PowerShell ────────────────────
      - name: Configure kubeconfig
        shell: powershell
        run: |
          # Write secret (base64) to temp file
          '${{ secrets.KUBE_CONFIG }}' | Out-File kubeconfig.b64 -Encoding ascii

          # Decode to kubeconfig.yaml
          certutil -f -decode kubeconfig.b64 kubeconfig.yaml | Out-Null

          # Export KUBECONFIG for subsequent steps
          $Env:KUBECONFIG = "$PWD\kubeconfig.yaml"
          "KUBECONFIG=$Env:KUBECONFIG" | Out-File $Env:GITHUB_ENV -Encoding ascii -Append
      # ───────────────────────────────────────────────────────────────────────

      # (Optional) quick cluster sanity check
      - name: Debug – show context & cluster-info
        shell: powershell
        continue-on-error: true        # even if it fails, keep going
        run: |
          Write-Host ">>> kubectl config current-context"
          kubectl config current-context -ErrorAction SilentlyContinue

          Write-Host "`n>>> kubectl cluster-info"
          kubectl cluster-info          -ErrorAction SilentlyContinue

      - name: Apply Kubernetes manifests
        shell: powershell
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
